import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Scanner;
import java.util.StringTokenizer;

public class boj_2178 {
	static int arr[][];
	static boolean visit[][];
	static int dx[] = { 0, 1, 0, -1 };
	static int dy[] = { 1, 0, -1, 0 };
	static int max = 1;
	static int N, M;

	public static void main(String[] args) throws IOException {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		M = Integer.parseInt(st.nextToken());
		arr = new int[N][M];
		visit = new boolean[N][M];

		for (int i = 0; i < N; i++) {
			st = new StringTokenizer(br.readLine());
			for (int j = 0; j < M; j++) {
				arr[i][j] = Integer.parseInt(st.nextToken());
			}
		}

		bfs(0, 0);
		System.out.println(max);
	}

	private static void bfs(int x, int y) {
		visit[x][y] = true;

		Queue<Point> q = new LinkedList<Point>();
		q.add(new Point(x, y));
		while (!q.isEmpty()) {
			for (int i = 0; i < 4; i++) {

			}

		}
		
		
		
	}
	
	
	
	
}
